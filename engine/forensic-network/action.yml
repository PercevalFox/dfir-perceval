name: Network Forensics Report (Auto)
description: "Résumé automatique des données dans network -> report.md + report.json"
inputs:
  case_path:
    description: "Chemin du case (racine)"
    required: true
runs:
  using: "composite"
  steps:
    - name: Préparer les dossiers de sortie
      shell: bash
      run: |
        set -euo pipefail
        OUT_DIR="${{ inputs.case_path }}/outputs/per_type/network"
        mkdir -p "$OUT_DIR"

    - name: Générer les rapports (network)
      shell: bash
      run: |
        set -euo pipefail
        CASE="${{ inputs.case_path }}"
        IN_DIR="$CASE/inputs/network"
        OUT_DIR="$CASE/outputs/per_type/network"
        NOW="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
        if [ -d "$IN_DIR" ]; then
          COUNT_FILES="$(find "$IN_DIR" -type f | wc -l | tr -d ' ')"
        else
          COUNT_FILES=0
        fi

        printf '{\n  "generated_at":"%s",\n  "type":"network",\n  "case_path":"%s",\n  "inputs_dir":"%s",\n  "files_count": %s\n}\n' \
          "$NOW" "$CASE" "$IN_DIR" "$COUNT_FILES" > "$OUT_DIR/report.json"

        {
          echo "# Network Forensics Report (Auto)"
          echo "_Généré le: $NOW (UTC)_"
          echo
          echo "- Case: \`$CASE\`"
          echo "- Type: **network**"
          echo "- Dossier d'entrée: \`$IN_DIR\`"
          echo "- Fichiers détectés: **$COUNT_FILES**"
          echo
          echo "## Aperçu des fichiers"
          if [ -d "$IN_DIR" ]; then
            find "$IN_DIR" -maxdepth 1 -type f -printf "- %f\n" | head -n 50
          else
            echo "(Aucun dossier d'entrée trouvé)"
          fi
        } > "$OUT_DIR/report.md"
